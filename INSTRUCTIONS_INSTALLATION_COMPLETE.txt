===============================================================================
üèóÔ∏è INSTRUCTIONS D'INSTALLATION COMPL√àTE 
   SYST√àME D'ESTIMATION MAT√âRIAUX TUNISIENS
===============================================================================

üìÖ Date: 12 Juin 2025
üéØ Pour: Installation sur nouveau laptop/ordinateur
üåç March√©: Tunisie - Construction & Immobilier
üìä Donn√©es: 525+ mat√©riaux + 6,036+ propri√©t√©s

===============================================================================
üìã PR√âREQUIS SYST√àME
===============================================================================

‚úÖ SYST√àME D'EXPLOITATION:
   - Windows 10/11 (recommand√©)
   - macOS 10.15+ 
   - Linux Ubuntu 20.04+

‚úÖ LOGICIELS REQUIS:
   - Python 3.12 ou plus r√©cent
   - Git
   - Node.js 16+ (pour Playwright)
   - 8GB RAM minimum (recommand√©: 16GB)
   - 2GB espace disque libre

===============================================================================
üöÄ √âTAPE 1: INSTALLATION DES PR√âREQUIS
===============================================================================

‚ñ∂Ô∏è 1.1 INSTALLER PYTHON 3.12+
   Windows:
   - T√©l√©charger depuis: https://www.python.org/downloads/
   - ‚ö†Ô∏è IMPORTANT: Cocher "Add Python to PATH" pendant l'installation
   
   macOS:
   - brew install python@3.12
   
   Linux:
   - sudo apt update
   - sudo apt install python3.12 python3.12-pip

‚ñ∂Ô∏è 1.2 INSTALLER GIT
   Windows:
   - T√©l√©charger depuis: https://git-scm.com/download/win
   
   macOS:
   - brew install git
   
   Linux:
   - sudo apt install git

‚ñ∂Ô∏è 1.3 INSTALLER NODE.JS
   Tous syst√®mes:
   - T√©l√©charger depuis: https://nodejs.org/
   - Choisir version LTS (Long Term Support)

‚ñ∂Ô∏è 1.4 V√âRIFIER LES INSTALLATIONS
   Ouvrir un terminal/invite de commandes et taper:
   
   python --version
   # Doit afficher: Python 3.12.x ou plus
   
   git --version
   # Doit afficher: git version x.x.x
   
   node --version
   # Doit afficher: v16.x.x ou plus

===============================================================================
üîÑ √âTAPE 2: T√âL√âCHARGEMENT DU PROJET
===============================================================================

‚ñ∂Ô∏è 2.1 CLONER LE REPOSITORY GITHUB
   Ouvrir terminal/invite de commandes:
   
   cd C:\
   git clone https://github.com/tekteku/scraper.git
   cd scraper

‚ñ∂Ô∏è 2.2 V√âRIFIER LE T√âL√âCHARGEMENT
   Vous devez voir ces fichiers principaux:
   - README.md
   - requirements.txt
   - llm_api_server.py
   - materials_dashboard.py
   - DONNEES_JSON_ORGANISEES/ (dossier)

===============================================================================
‚öôÔ∏è √âTAPE 3: INSTALLATION DES D√âPENDANCES PYTHON
===============================================================================

‚ñ∂Ô∏è 3.1 CR√âER UN ENVIRONNEMENT VIRTUEL (RECOMMAND√â)
   Windows:
   python -m venv venv
   venv\Scripts\activate
   
   macOS/Linux:
   python3 -m venv venv
   source venv/bin/activate

‚ñ∂Ô∏è 3.2 INSTALLER LES D√âPENDANCES
   pip install --upgrade pip
   pip install -r requirements.txt

‚ñ∂Ô∏è 3.3 INSTALLER PLAYWRIGHT BROWSERS
   playwright install

‚ñ∂Ô∏è 3.4 V√âRIFIER L'INSTALLATION
   python -c "import fastapi, streamlit, pandas, playwright; print('‚úÖ Toutes les d√©pendances install√©es!')"

===============================================================================
üåê √âTAPE 4: CONFIGURATION ET PREMIER LANCEMENT
===============================================================================

‚ñ∂Ô∏è 4.1 LANCER L'API ML/LLM (Terminal 1)
   python llm_api_server.py
   
   ‚úÖ Succ√®s si vous voyez:
   "Uvicorn running on http://127.0.0.1:8000"

‚ñ∂Ô∏è 4.2 LANCER LE DASHBOARD (Terminal 2 - nouveau terminal)
   Activer l'environnement:
   Windows: venv\Scripts\activate
   macOS/Linux: source venv/bin/activate
   
   Puis:
   streamlit run materials_dashboard.py
   
   ‚úÖ Succ√®s si vous voyez:
   "Local URL: http://localhost:8501"

‚ñ∂Ô∏è 4.3 ACC√âDER AUX INTERFACES
   üåê Dashboard: http://localhost:8501
   ü§ñ API: http://localhost:8000
   üìä Documentation API: http://localhost:8000/docs

===============================================================================
üìä √âTAPE 5: V√âRIFICATION DES DONN√âES
===============================================================================

‚ñ∂Ô∏è 5.1 V√âRIFIER LES DONN√âES MAT√âRIAUX
   Dans le dashboard, vous devez voir:
   - 525+ mat√©riaux de construction
   - Cat√©gories: Ciment, Carrelage, Peinture, etc.
   - Prix en TND (Dinars Tunisiens)

‚ñ∂Ô∏è 5.2 V√âRIFIER LES DONN√âES IMMOBILI√àRES
   Dans DONNEES_JSON_ORGANISEES/02_PROPRIETES_IMMOBILIERES/:
   - 6,036+ propri√©t√©s tunisiennes
   - Sources: remax.com.tn, fi-dari.tn, etc.

‚ñ∂Ô∏è 5.3 TESTER L'API
   Ouvrir: http://localhost:8000/docs
   Tester l'endpoint /products

===============================================================================
üîß UTILISATION AVANC√âE
===============================================================================

‚ñ∂Ô∏è 6.1 G√âN√âRER UN DEVIS
   python devis_generator.py
   
   Ou via le dashboard:
   - Aller dans "Estimation Projet"
   - S√©lectionner mat√©riaux et quantit√©s
   - G√©n√©rer devis automatique

‚ñ∂Ô∏è 6.2 SCRAPING MANUEL (OPTIONNEL)
   Pour mettre √† jour les donn√©es:
   python brico_direct_scraper.py
   python multi_site_scraper.py

‚ñ∂Ô∏è 6.3 ANALYSE DES PRIX
   python simple_price_analyzer.py

===============================================================================
üõ†Ô∏è MAINTENANCE ET MISE √Ä JOUR
===============================================================================

‚ñ∂Ô∏è 7.1 MISE √Ä JOUR DU CODE
   git pull origin main
   pip install -r requirements.txt

‚ñ∂Ô∏è 7.2 NETTOYAGE DES DONN√âES
   python nettoyer_donnees_materiaux.py

‚ñ∂Ô∏è 7.3 SAUVEGARDE
   Sauvegarder le dossier DONNEES_JSON_ORGANISEES/
   Sauvegarder les fichiers .csv principaux

===============================================================================
‚ùó R√âSOLUTION DES PROBL√àMES COURANTS
===============================================================================

üêõ PROBL√àME: "Python n'est pas reconnu"
   ‚úÖ SOLUTION: R√©installer Python avec "Add to PATH"

üêõ PROBL√àME: "pip install √©choue"
   ‚úÖ SOLUTION: 
   python -m pip install --upgrade pip
   pip install --upgrade setuptools wheel

üêõ PROBL√àME: "Playwright browsers manquants"
   ‚úÖ SOLUTION: playwright install

üêõ PROBL√àME: "Port 8000 ou 8501 occup√©"
   ‚úÖ SOLUTION:
   API: python llm_api_server.py --port 8001
   Dashboard: streamlit run materials_dashboard.py --server.port 8502

üêõ PROBL√àME: "Donn√©es manquantes"
   ‚úÖ SOLUTION: V√©rifier que DONNEES_JSON_ORGANISEES/ est pr√©sent

üêõ PROBL√àME: "Import errors"
   ‚úÖ SOLUTION: V√©rifier l'environnement virtuel activ√©

===============================================================================
üìà PERFORMANCES ET OPTIMISATION
===============================================================================

‚ö° POUR DE MEILLEURES PERFORMANCES:
   - 16GB RAM ou plus
   - SSD recommand√©
   - Connexion internet stable pour scraping
   - Fermer applications non n√©cessaires

‚ö° MONITORING:
   - Dashboard: http://localhost:8501
   - API Status: http://localhost:8000/health
   - Logs dans les fichiers .log

===============================================================================
üìû SUPPORT ET AIDE
===============================================================================

üìÇ DOCUMENTATION COMPL√àTE:
   - README.md: Guide principal
   - DESCRIPTION_COMPLETE_PROJET.md: Documentation technique
   - PROJET_FINAL_RESUME.md: R√©sum√© ex√©cutif

üåê REPOSITORY GITHUB:
   https://github.com/tekteku/scraper

üìß CONTACT:
   GitHub: @tekteku
   Projet: Construction Materials Estimation System

üîó RESSOURCES UTILES:
   - Python: https://www.python.org/
   - Streamlit: https://streamlit.io/
   - FastAPI: https://fastapi.tiangolo.com/
   - Playwright: https://playwright.dev/

===============================================================================
‚úÖ CHECKLIST DE V√âRIFICATION FINALE
===============================================================================

‚ñ° Python 3.12+ install√© et fonctionnel
‚ñ° Git install√© et repository clon√©
‚ñ° Environnement virtuel cr√©√© et activ√©
‚ñ° requirements.txt install√© sans erreurs
‚ñ° Playwright browsers install√©s
‚ñ° API ML/LLM d√©marre sur port 8000
‚ñ° Dashboard Streamlit d√©marre sur port 8501
‚ñ° Donn√©es mat√©riaux visibles (525+ produits)
‚ñ° Donn√©es immobili√®res accessibles (6,036+ propri√©t√©s)
‚ñ° API endpoints r√©pondent (/docs accessible)
‚ñ° G√©n√©ration de devis fonctionne
‚ñ° Dashboard interactif responsive

===============================================================================
üéâ F√âLICITATIONS !
===============================================================================

Votre syst√®me d'estimation de mat√©riaux tunisiens est maintenant
op√©rationnel sur votre nouvel ordinateur !

üèóÔ∏è Fonctionnalit√©s disponibles:
   ‚úÖ Catalogue de 525+ mat√©riaux tunisiens
   ‚úÖ Base de 6,036+ propri√©t√©s immobili√®res  
   ‚úÖ API ML/LLM pour pr√©dictions intelligentes
   ‚úÖ Dashboard interactif avec visualisations
   ‚úÖ G√©n√©ration automatique de devis
   ‚úÖ Analyses comparatives de prix
   ‚úÖ Monitoring temps r√©el

üöÄ Le syst√®me est pr√™t pour la production !

===============================================================================
üìù NOTES IMPORTANTES
===============================================================================

‚ö†Ô∏è S√âCURIT√â:
   - Ne jamais commiter de cl√©s API dans Git
   - Utiliser variables d'environnement pour secrets
   - Garder les d√©pendances √† jour

‚ö†Ô∏è DONN√âES:
   - Donn√©es dat√©es du 11/06/2025
   - Mettre √† jour r√©guli√®rement via scraping
   - Sauvegarder avant modifications importantes

‚ö†Ô∏è PERFORMANCE:
   - Surveiller l'utilisation m√©moire
   - Nettoyer r√©guli√®rement les logs
   - Optimiser selon usage

===============================================================================
FIN DES INSTRUCTIONS
Bonne utilisation de votre syst√®me d'estimation tunisien ! üáπüá≥
===============================================================================
